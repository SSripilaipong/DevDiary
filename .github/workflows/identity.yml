name: Identity Context
on:
  push:
    branches:
      - main
    paths:
      - identity/**
      - .github/workflows/identity.yml
      - .github/actions/identity-backend-setup/**
      - .github/actions/identity-backend-unitTest/**
      - .github/actions/identity-frontend-build/**
jobs:
  test-identity-unitTest:
    name: run Unit test for identity.backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./identity/infrastructure
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - uses: actions/checkout@v1

      - uses: ./.github/actions/identity-backend-setup
        with:
          backend-directory: ./identity/backend/

      - uses: ./.github/actions/identity-backend-unitTest
        with:
          backend-directory: ./identity/backend/

  test-deploy-core-acceptance:
    name: Deploy core from artifact to run acceptance test
    needs:
      - test-identity-unitTest
    uses: ./.github/workflows/core-deploy-artifacts.yml
    permissions:
      id-token: write
      contents: read
    with:
      environment: test
    secrets:
      aws-region: ap-southeast-1
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      artifact-bucket-name: ${{ secrets.ARTIFACT_BUCKET_NAME }}
      app-name: ${{ secrets.APP_NAME }}
      tf-bucket: ${{ secrets.TF_BACKEND_BUCKET_NAME }}

  test-deploy-identity-acceptance:
    name: Deploy identity to run acceptance test
    needs:
      - test-deploy-core-acceptance
    uses: ./.github/workflows/identity-deploy-source.yml
    permissions:
      id-token: write
      contents: read
    with:
      environment: test
    secrets:
      aws-region: ap-southeast-1
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      app-name: ${{ secrets.APP_NAME }}
      tf-bucket: ${{ secrets.TF_BACKEND_BUCKET_NAME }}
      frontend-bucket: ${{ secrets.APP_NAME }}-test

  deploy-identity:
    uses: ./.github/workflows/identity-deploy-source.yml
    needs:
      - test-deploy-identity-acceptance
    permissions:
      id-token: write
      contents: read
    with:
      environment: prod
    secrets:
      aws-region: ap-southeast-1
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      app-name: ${{ secrets.APP_NAME }}
      tf-bucket: ${{ secrets.TF_BACKEND_BUCKET_NAME }}
      frontend-bucket: ${{ secrets.APP_NAME }}

  update-cdn:
    name: Update CDN for identity.frontend on CloudFront
    needs:
      - deploy-identity
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Invalidate Cache on Cloudfront if CLOUDFRONT_DISTRIBUTION_ID provided
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          S3_PATH: /_s3/identity/*
        run: |
          if [[ ! -z "$CLOUDFRONT_DISTRIBUTION_ID" ]]
          then
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "$S3_PATH"
          fi
