name: Identity Context
on:
  push:
    branches:
      - main
    paths:
      - identity/**
      - .github/workflows/identity.yml
jobs:
  deploy-identity-infrastructure:
    name: Deploy identity.infrastructure to AWS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./identity/infrastructure
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - uses: actions/checkout@v1

#      - uses: actions/setup-python@v2
#        with:
#          python-version: '3.9'

      - uses: ./.github/actions/identity-backend-setup

      - uses: ./.github/actions/identity-backend-unitTest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Apply Terraform
        working-directory: ./identity/infrastructure/src
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          TF_VAR_APP_NAME: ${{ secrets.APP_NAME }}
          TF_VAR_GLOBAL_PREFIX: prod
          TF_BACKEND_BUCKET_NAME: ${{ secrets.TF_BACKEND_BUCKET_NAME }}
          TF_BACKEND_BUCKET_PATH: prod/identity.tfstate
        run: |
          chmod +x ../script/apply.sh
          ../script/apply.sh
        shell: bash
  deploy-identity-frontend:
    name: Deploy identity.frontend to AWS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./identity/frontend
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.2

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload to S3
        env:
          FRONTEND_S3_BUCKET_NAME: ${{ secrets.APP_NAME }}
          UPLOAD_PATH: identity
        run: aws s3 cp dist/ s3://"$FRONTEND_S3_BUCKET_NAME"/_s3/"$UPLOAD_PATH" --recursive

      - name: Invalidate Cache on Cloudfront if CLOUDFRONT_DISTRIBUTION_ID provided
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          S3_PATH: /_s3/identity/*
        run: |
          if [[ ! -z "$CLOUDFRONT_DISTRIBUTION_ID" ]]
          then
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "$S3_PATH"
          fi
